## Service(s) settings for HiMVC\Core\Base


[event]
public=true
class=HiMVC\Core\Base\Event
# Callbacks can be specified with @ to preload the service, % to lazy load it
# (only possible with public services) and third alternative is to specify a static callback:
#arguments[events][pre_route][key1]=@someService::function
#arguments[events][pre_route][key2]=%somePublicService::function
#arguments[events][pre_route][key3]=ns\class::function





## INIT: These settings and their dependencies are loaded before modules

[request]
public=true
class=HiMVC\Core\MVC\RequestParser
factory=createRequest
arguments[server]=$_SERVER
arguments[post]=$_POST
arguments[get]=$_GET
arguments[cookie]=$_COOKIE
arguments[files]=$_FILES
arguments[body]=$body
arguments[index]=$indexFile
#arguments[settings]=
## Access before session so session can be pr access if needed
#MethodInjection[appendAccessMatch]=@-accessMatch
MethodInjection[setSession][session]=@session

[-accessMatch]
shared=false
class=HiMVC\Core\Base\AccessMatch
factory=match

[site-accessMatch]
arguments[request]=@request
# @todo: Domain can not be key as ini parser does not support this
arguments[rules][host][ws2]=backend
arguments[rules][host][localhost]=backend
arguments[rules][default]=frontend
arguments[type]=site

[language-accessMatch]
arguments[request]=@request
arguments[rules][uri][fre]=french
arguments[rules][uri][ger]=german
arguments[rules][uri][nor]=norwegian
arguments[rules][default]=english
arguments[type]=language

[session]
class=HiMVC\Core\Base\SessionArray
public=true
arguments[request]=@request
arguments[sessionHandler]=@sessionHandler
arguments[config][name]=eZSESSID

[sessionHandler]
class=HiMVC\Core\Base\SessionHandler\SessionHandlerPHP
